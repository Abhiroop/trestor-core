<Application
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d" x:Class="TNetWallet.App"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
         
    	<Style x:Key="ContentPresenterStyle_New" TargetType="{x:Type ContentPresenter}">
    		<Setter Property="OpacityMask" Value="{x:Null}"/>
    		<Style.Triggers>
    			<EventTrigger RoutedEvent="FrameworkElement.Loaded"/>
    		</Style.Triggers>
    	</Style>
         
    	<Style x:Key="TrestorButtonStyle" TargetType="{x:Type Button}">
    		<Setter Property="Template">
    			<Setter.Value>
    				<ControlTemplate TargetType="{x:Type Button}">
    					<ControlTemplate.Resources>
    						<Storyboard x:Key="Storyboard1">
    							<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
    								<EasingColorKeyFrame KeyTime="0" Value="#FF59AE46"/>
    								<EasingColorKeyFrame KeyTime="0:0:0.2" Value="White"/>
    							</ColorAnimationUsingKeyFrames>
    							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.StrokeThickness)" Storyboard.TargetName="rectangle">
    								<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
    								<EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="2"/>
    							</DoubleAnimationUsingKeyFrames>
    							<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
    								<EasingColorKeyFrame KeyTime="0" Value="Black"/>
    								<EasingColorKeyFrame KeyTime="0:0:0.2" Value="#FF59AE46"/>
    							</ColorAnimationUsingKeyFrames>
    							<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="textBlock">
    								<EasingColorKeyFrame KeyTime="0" Value="#FFFDFDFD"/>
    								<EasingColorKeyFrame KeyTime="0:0:0.2" Value="#FF59AE46"/>
    							</ColorAnimationUsingKeyFrames>
    						</Storyboard>
    						<Storyboard x:Key="Storyboard2">
    							<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
    								<EasingColorKeyFrame KeyTime="0" Value="White"/>
    								<EasingColorKeyFrame KeyTime="0:0:0.2" Value="#FF59AE46"/>
    							</ColorAnimationUsingKeyFrames>
    							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.StrokeThickness)" Storyboard.TargetName="rectangle">
    								<EasingDoubleKeyFrame KeyTime="0" Value="2"/>
    								<EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
    							</DoubleAnimationUsingKeyFrames>
    							<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
    								<EasingColorKeyFrame KeyTime="0" Value="#FF59AE46"/>
    								<EasingColorKeyFrame KeyTime="0:0:0.2" Value="Black"/>
    							</ColorAnimationUsingKeyFrames>
    							<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="textBlock">
    								<EasingColorKeyFrame KeyTime="0" Value="#FF59AE46"/>
    								<EasingColorKeyFrame KeyTime="0:0:0.2" Value="#FFFDFDFD"/>
    							</ColorAnimationUsingKeyFrames>
    						</Storyboard>
    					</ControlTemplate.Resources>
    					<Grid x:Name="grid">
    						<Grid.ColumnDefinitions>
    							<ColumnDefinition Width="63*"/>
    							<ColumnDefinition Width="65*"/>
    						</Grid.ColumnDefinitions>
    						<Rectangle x:Name="rectangle" Fill="#FF59AE46" RadiusY="3.5" RadiusX="3.5" Stroke="Black" StrokeThickness="0" Grid.ColumnSpan="2"/>
    						<ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Style="{DynamicResource ContentPresenterStyle_New}" Opacity="0" Grid.ColumnSpan="2" Margin="73.833,11.02"/>
    						<TextBlock x:Name="textBlock" HorizontalAlignment="Center" Margin="10" TextWrapping="Wrap" Text="{Binding Content, ElementName=contentPresenter}" VerticalAlignment="Center" RenderTransformOrigin="1.25,0.255" Height="Auto" Grid.ColumnSpan="2"/>
    					</Grid>
    					<ControlTemplate.Triggers>
    						<Trigger Property="IsDefault" Value="False"/>
    						<Trigger Property="IsFocused" Value="False">
    							<Trigger.ExitActions>
    								<BeginStoryboard x:Name="Storyboard2_BeginStoryboard" Storyboard="{StaticResource Storyboard2}"/>
    							</Trigger.ExitActions>
    							<Trigger.EnterActions>
    								<BeginStoryboard Storyboard="{StaticResource Storyboard1}"/>
    							</Trigger.EnterActions>
    						</Trigger>
    						<Trigger Property="IsFocused" Value="True">
    							<Trigger.ExitActions>
    								<BeginStoryboard Storyboard="{StaticResource Storyboard1}"/>
    							</Trigger.ExitActions>
    							<Trigger.EnterActions>
    								<BeginStoryboard x:Name="Storyboard2_BeginStoryboard1" Storyboard="{StaticResource Storyboard2}"/>
    							</Trigger.EnterActions>
    						</Trigger>
    						<Trigger Property="IsDefaulted" Value="True"/>
    						<Trigger Property="IsMouseOver" Value="True"/>
    						<Trigger Property="IsPressed" Value="True"/>
    						<Trigger Property="IsEnabled" Value="False"/>
    					</ControlTemplate.Triggers>
    				</ControlTemplate>
    			</Setter.Value>
    		</Setter>
    	</Style>
    	<SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3"/>
    	<SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA"/>
    	<SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5"/>
    	<Style x:Key="TrestorTextBoxStyle" TargetType="{x:Type TextBox}">
    		<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
    		<Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
    		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
    		<Setter Property="BorderThickness" Value="1"/>
    		<Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
    		<Setter Property="HorizontalContentAlignment" Value="Left"/>
    		<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
    		<Setter Property="AllowDrop" Value="true"/>
    		<Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
    		<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
    		<Setter Property="Template">
    			<Setter.Value>
    				<ControlTemplate TargetType="{x:Type TextBox}">
						<Grid  x:Name="border">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="0*"/>
								<ColumnDefinition/>
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition Height="2*"/>
								<RowDefinition Height="3*"/>
							</Grid.RowDefinitions>
							<TextBlock Text="{TemplateBinding Text}" Grid.ColumnSpan="2"></TextBlock>
							<ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" Grid.RowSpan="1" Grid.Row="1" Grid.ColumnSpan="2"/>
						</Grid>

    					<ControlTemplate.Triggers>
    						<Trigger Property="IsEnabled" Value="false">
    							<Setter Property="Opacity" TargetName="border" Value="0.56"/>
    						</Trigger>    			
    					</ControlTemplate.Triggers>
    				</ControlTemplate>
    			</Setter.Value>
    		</Setter>
    		<Style.Triggers>
    			<MultiTrigger>
    				<MultiTrigger.Conditions>
    					<Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
    					<Condition Property="IsSelectionActive" Value="false"/>
    				</MultiTrigger.Conditions>
    				<Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
    			</MultiTrigger>
    		</Style.Triggers>
    	</Style>
        <Style x:Key="TrestorSingle_TextBoxStyle" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True" CornerRadius="3.5" BorderBrush="#FF59AE46" Background="#FFF6FFF4">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" Foreground="#FF59AE46"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                        <Condition Property="IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>


    </Application.Resources>
</Application>
